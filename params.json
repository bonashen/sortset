{"name":"Sortset","tagline":"sort set toolkit for javascript on explorer & nodejs","body":"# sortset\r\n\r\nsortset has Set,SortSet,SortMap,Iterator for javascript,is collection toolkit part.\r\n\r\n## examples\r\n\r\n### SortSet\r\n```coffeescript\r\n\r\n  ss = require '../sortset'\r\n\r\n  SortSet = ss.SortSet\r\n  SortMap = ss.SortMap\r\n\r\n  set = new SortSet([10,9,8,7,2,3,4,6,1])\r\n  \r\n  console.log set,\"set contains 5:\",set.contains(5) \r\n\r\n    #==>{ entry: [ 1, 2, 3, 4, 6, 7, 8, 9, 10 ] } 'set contains 5:' false\r\n  \r\n  set = set.union(new SortSet([5,0]))\r\n  \r\n  console.log set,\"set contains 5:\",set.contains(5),\"set instanceof SortSet:\",set instanceof SortSet\r\n\r\n    #==>{ entry: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ] } 'set contains 5:' true 'set instanceof SortSet:' true\r\n  \r\n  set = set.intersect(new SortSet([11,4,6,8,9]))\r\n  \r\n  console.log set,\"set contains 5:\",set.contains(5),\"set instanceof SortSet:\",set instanceof SortSet\r\n\r\n    #==>{ entry: [ 4, 6, 8, 9 ] } 'set contains 5:' false 'set instanceof SortSet:' true\r\n  set = set.difference(new SortSet([11,7,5,3,2,1,0,10]))\r\n  \r\n  console.log set,\"set contains 5:\",set.contains(5),\"set instanceof SortSet:\",set instanceof SortSet\r\n\r\n    #==>{ entry: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ] } 'set contains 5:' true 'set instanceof SortSet:' true\r\n  ret = set.add(4,3,9,12)\r\n  console.log ret\r\n\r\n    #==>[ 4, 3, 9, result: false ]\r\n    \r\n```\r\n\r\n### SortMap\r\n\r\n```coffeescript\r\n\r\nmap = new SortMap([{key:'2',value:'bona shen'}])\r\nmap.add('8','kerry')\r\nmap.add('3','lala')\r\nmap.add('1','petter')\r\nmap.add('2','bona')\r\n\r\nconsole.log map\r\n\r\n    #==>{ entry: \r\n    #==>      [ { key: '1', value: 'petter' },\r\n    #==>         { key: '2', value: 'bona' },\r\n    #==>         { key: '3', value: 'lala' },\r\n    #==>         { key: '8', value: 'kerry' } ] }\r\n    \r\nconsole.log \"key:2 's value:\",map.get('2')\r\n\r\n    #==>key:2 's value: bona\r\n\r\nconsole.log \"map.contains key 1:\",map.containsKey('1'),\"map.contains 'kerry' value:\",map.containsValue('kerry')\r\n\r\n    #==>map.contains key 1: true map.contains 'kerry' value: true\r\n```\r\n\r\n\r\n### iterator\r\n\r\n```coffeescript\r\n\r\niterator = map.iterator\r\nconsole.log \"key-value iterator instanceof ss.Iterator:\",iterator instanceof ss.Iterator\r\n\r\n    #==>key-value iterator instanceof ss.Iterator: true\r\nconsole.log \"key-value interator operator:\"\r\nwhile iterator.hasNext()\r\n  obj = iterator.next()\r\n  console.log \"key:#{obj.key}\",\"  value:#{obj.value}\"\r\n\r\n    #==>key-value interator operator:\r\n    #==>key:1   value:petter\r\n    #==>key:2   value:bona\r\n    #==>key:3   value:lala\r\n    #==>key:8   value:kerry\r\niterator = map.keySet\r\nconsole.log \"keySet iterator instanceof ss.Iterator:\",iterator instanceof ss.Iterator\r\n\r\n    #==>keySet iterator instanceof ss.Iterator: true\r\nconsole.log \"keySet interator operator:\"\r\nwhile iterator.hasNext()\r\n  obj = iterator.next()\r\n  console.log \"key:#{obj}\"\r\n\r\n    #==>keySet interator operator:\r\n    #==>key:1   key:2   key:3 key:8\r\niterator = map.values\r\nconsole.log \"values iterator instanceof ss.Iterator:\",iterator instanceof ss.Iterator\r\nconsole.log \"values interator operator:\"\r\nwhile iterator.hasNext()\r\n  obj = iterator.next()\r\n  console.log \"value:#{obj}\"\r\n\r\n    #==>values iterator instanceof ss.Iterator: true\r\n    #==>values interator operator:\r\n    #==>value:petter\r\n    #==>value:bona\r\n    #==>value:lala\r\n    #==>value:kerry\r\n```\r\n\r\n\r\n  \r\n  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}